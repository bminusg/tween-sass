// BUILT-IN MODULES
@use "sass:list"
@use "sass:map"
@use "sass:selector"

// KEYFRAMES
@use "../keyframes/slide" as slide
@use "../keyframes/clip" as clip
@use "../keyframes/zoom" as zoom
@use "../keyframes/fade" as fade
@use "../keyframes/pulse"

// LOAD DEFAULTS
@use "keyframeDefaults" as *

// LIST OF EXCISTING KEYFRAME ANIMATION NAMES
$keyframes: ()

@mixin defineKeyframes($config, $parent, $activeClass)

    $names: map.get($config, "name")
    $duration: map.get($config, "totalDuration")

    // BUILD ANIMATION NAME
    $animationName: null
    @for $i from 1 to length($names) + 1
        @if $animationName == null
            $animationName: list.nth($names, $i)
        @else
            $animationName: $animationName + "_" + list.nth($names, $i)

    // PREVENT KEYFRAME DUPLICATES
    @if not list.index($keyframes, $animationName)
        // APPEND NEW KEYFRAME TO LIST
        $keyframes: list.append($keyframes, $animationName) !global

        // BUILD KEYFRAMES
        @keyframes #{$animationName}
            @for $i from 1 to length($names) + 1
                $name: list.nth($names, $i )
                $timingFunction: list.nth(map.get($config, "timing-function"), $i )
                $startFrame: list.nth(map.get($config, "keyframes"), $i )
                $endFrame: list.nth(map.get($config, "keyframes"), $i + 1 )

                // SLIDE

                @if $name == "slideInLeft"
                    @include slide.InLeft($startFrame, $endFrame, $timingFunction)
                @if $name == "slideInRight"
                    @include slide.InRight($startFrame, $endFrame, $timingFunction)
                @if $name == "slideInTop"
                    @include slide.InTop($startFrame, $endFrame, $timingFunction)
                @if $name == "slideInBottom"
                    @include slide.InBottom($startFrame, $endFrame, $timingFunction)
                @if $name == "slideOutLeft"
                    @include slide.OutLeft($startFrame, $endFrame, $timingFunction)
                @if $name == "slideOutRight"
                    @include slide.OutRight($startFrame, $endFrame, $timingFunction)
                @if $name == "slideOutTop"
                    @include slide.OutTop($startFrame, $endFrame, $timingFunction)
                @if $name == "slideOutBottom"
                    @include slide.OutBottom($startFrame, $endFrame, $timingFunction)

                // PULSE

                @if $name == "pulse"
                    @include pulse.pulse($startFrame, $endFrame, $timingFunction)

                // CLIP

                @if $name == "clipInCircle"
                    @include clip.inCircle($startFrame, $endFrame, $timingFunction)
                @if $name == "clipInLeft"
                    @include clip.inLeft($startFrame, $endFrame, $timingFunction)
                @if $name == "clipInRight"
                    @include clip.inRight($startFrame, $endFrame, $timingFunction)
                @if $name == "clipInTop"
                    @include clip.inTop($startFrame, $endFrame, $timingFunction)
                @if $name == "clipInBottom"
                    @include clip.inBottom($startFrame, $endFrame, $timingFunction)
                @if $name == "clipOutCircle"
                    @include clip.outCircle($startFrame, $endFrame, $timingFunction)
                @if $name == "clipOutLeft"
                    @include clip.outLeft($startFrame, $endFrame, $timingFunction)
                @if $name == "clipOutRight"
                    @include clip.outRight($startFrame, $endFrame, $timingFunction)
                @if $name == "clipOutTop"
                    @include clip.outTop($startFrame, $endFrame, $timingFunction)
                @if $name == "clipOutBottom"
                    @include clip.outBottom($startFrame, $endFrame, $timingFunction)

                // ZOOM

                @if $name == "zoomIn"
                    @include zoom.in($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomInLeft"
                    @include zoom.inLeft($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomInTop"
                    @include zoom.inTop($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomInRight"
                    @include zoom.inRight($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomInBottom"
                    @include zoom.inBottom($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomOut"
                    @include zoom.out($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomOutLeft"
                    @include zoom.outLeft($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomOutTop"
                    @include zoom.outTop($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomOutRight"
                    @include zoom.outRight($startFrame, $endFrame, $timingFunction)
                @if $name == "zoomOutBottom"
                    @include zoom.outBottom($startFrame, $endFrame, $timingFunction)

                // FADE

                @if $name == "fadeIn"
                    @include fade.in($startFrame, $endFrame, $timingFunction)
                @if $name == "fadeOut"
                    @include fade.out($startFrame, $endFrame, $timingFunction)

    ///R
    // DEFINE ANIMATION PROPS
    $selectors: selector.parse(#{&})

    @each $selector in $selectors

        // ADDING PARENT
        @if $parent
            $activeClass: selector.unify($parent, $activeClass)

        // IN CASE OF OVERWRITING 
        // YOU CAN USE A SECOND ACTIVE CLASS OR DATA ATTRIBUTE
        @if length($selector) > 1
            $superSelector: selector.unify($activeClass, list.nth($selector, 1))
            $selector: selector.replace($selector, list.nth($selector, 1) , $superSelector)
        @else
            $selector: selector.nest($activeClass, $selector)

        @at-root #{$selector}
            animation-name: $animationName
            animation-duration: $duration
            animation-delay: 0s
            animation-fill-mode: forwards
